
name: Deploy Infrastructure

on:
  workflow_dispatch:
    inputs:
      destroy:
        description: 'Destroy infrastructure'
        default: false
        required: true
        type: boolean
  push:
    branches:
    - main
    paths:
      - 'src/infra/**.tf'

defaults:
  run:
    working-directory: 'src/infra/'

env:
  ARM_CLIENT_ID:       ${{secrets.TF_ARM_CLIENT_ID}}
  ARM_CLIENT_SECRET:   ${{secrets.TF_ARM_CLIENT_SECRET}}
  ARM_SUBSCRIPTION_ID: ${{secrets.TF_ARM_SUBSCRIPTION_ID}}
  ARM_TENANT_ID:       ${{secrets.TF_ARM_TENANT_ID}}

jobs:

  terraform-deploy:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - uses: hashicorp/setup-terraform@v2

    - name: Terraform fmt
      id: fmt
      run: terraform fmt -list -diff #-check 
      continue-on-error: true

    - name: Terraform init
      id: init
      run: terraform init -backend-config="resource_group_name=${{secrets.TF_BACKEND_RESOURCE_GROUP_NAME}}" -backend-config="storage_account_name=${{secrets.TF_STORAGE_ACCOUNT_NAME}}" -backend-config="container_name=${{secrets.TF_STORAGE_CONTAINER_NAME}}" -backend-config="key=githubaction.multiregionanycast.tfstate"

    - name: Terraform validate
      id: validate
      run: terraform validate

    - name: Terraform plan
      id: plan
      run: terraform plan -input=false -out=tf_plan
      continue-on-error: false

    - name: Terraform apply
      id: apply
      run: terraform apply -parallelism=25 -auto-approve tf_plan
      continue-on-error: false

    - name: Terraform destroy
      if: ${{ github.event.inputs.destroy == 'true' }}
      run: terraform destroy -auto-approve tf_plan